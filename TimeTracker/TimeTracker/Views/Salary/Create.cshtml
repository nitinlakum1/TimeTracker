@model TimeTracker.Models.Salary.SalaryViewModel
@{
    ViewData["Title"] = "Create Salary";
}

@section ContentHeader{
    <div class="col-sm-6">
        <h4 class="m-0">Create Salary</h4>
    </div>
    <div class="col-sm-6">
        <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Dashboard">Dashboard</a></li>
            <li class="breadcrumb-item"><a asp-action="Index">Salary</a></li>
            <li class="breadcrumb-item active">Create Salary</li>
        </ol>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <div class="card card-lightblue card-outline">
            <div class="card-header">
                <h3 class="card-title font-color">
                    <i class="fa-solid fa-calendar-days"></i>
                    Create Salary
                </h3>
            </div>
            <form asp-action="Create" id="form">
                <div class="card-body">
                    <div class="row">
                        <div class="form-group col-md-3">
                            <label asp-for="UserId">Username</label>
                            <select asp-for="UserId" asp-items="ViewBag.Users" class="form-control form-control-sm">
                                <option value="">Select Username</option>
                            </select>
                            <span id="spantxt" class="text-danger"></span>
                            <span asp-validation-for="UserId" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-2">
                            <label asp-for="Salary">Salary</label>
                            <input asp-for="Salary" type="text" class="form-control form-control-sm" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$" data-type="currency" placeholder="Salary">
                            <span asp-validation-for="Salary" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-2">
                            <label asp-for="FromDate">From Date</label>
                            <input asp-for="FromDate" type="date" class="form-control form-control-sm" placeholder="From Date">
                            <span asp-validation-for="FromDate" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-2">
                            <label asp-for="ToDate">To Date</label>
                            <input asp-for="ToDate" type="date" class="form-control form-control-sm" placeholder="To Date">
                            <span asp-validation-for="ToDate" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <input type="submit" class="btn btn-info theme-color" value="Submit" />
                    <button type="reset" class="btn btn-secondary ml-1">Reset</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div>
</div>


@section Scripts{
    <script>
        $(document).ready(function () {
            SelectedMenu('menuMaster', 'menuSalary');

            $('#ToDate').change(function () {
                if ($("#ToDate").val() < $("#FromDate").val()) {
                    $("#spantxt").text("Please Select Valid Date");
                }
            });

            // Formatting Currency Value
            (function ($, undefined) {
                "use strict";

                $(function () {
                    var $form = $("#form");
                    var $input = $form.find("#Salary");

                    $input.on("keyup", function (event) {
                        var $this = $(this);
                        // Get the value.
                        var input = $this.val();

                        var input = input.replace(/[\D\s\._\-]+/g, "");
                        input = input ? parseInt(input, 10) : 0;

                        $this.val(function () {
                            return (input === 0) ? "" : input.toLocaleString("en-US");
                        });
                    });
                });
            })(jQuery);

        });
    </script>
}