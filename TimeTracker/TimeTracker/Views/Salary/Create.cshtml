@model TimeTracker.Models.Salary.SalaryViewModel
@{
    ViewData["Title"] = "Create Salary";
}

@section ContentHeader{
    <div class="col-sm-6">
        <h4 class="m-0">Create Salary</h4>
    </div>
    <div class="col-sm-6">
        <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Dashboard">Dashboard</a></li>
            <li class="breadcrumb-item"><a asp-action="Index">Salary</a></li>
            <li class="breadcrumb-item active">Create Salary</li>
        </ol>
    </div>
}

    <div class="row">
        <div class="col-md-12">
            <div class="card card-lightblue card-outline">
                <div class="card-header">
                    <h3 class="card-title font-color">
                        <i class="fa-solid fa-calendar-days"></i>
                        Create Salary
                    </h3>
                </div>
                <form asp-action="Create">
                    <div class="card-body">
                        <div class="row">
                            <div class="form-group col-md-3">
                                <label asp-for="UserId">Username</label>
                                <select asp-for="UserId" asp-items="ViewBag.Users" class="form-control form-control-sm">
                                    <option value="">Select Username</option>
                                </select>
                                <span asp-validation-for="UserId" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-2">
                                <label asp-for="Salary">Salary</label>
                            <input asp-for="Salary" type="text" class="form-control form-control-sm" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$" data-type="currency" placeholder="Salary">
                                <span asp-validation-for="Salary" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-2">
                                <label asp-for="FromDate">From Date</label>
                                <input asp-for="FromDate" type="date" class="form-control form-control-sm" placeholder="From Date">
                                <span asp-validation-for="FromDate" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-2">
                                <label asp-for="ToDate">To Date</label>
                                <input asp-for="ToDate" type="date" class="form-control form-control-sm" placeholder="To Date">
                                <span asp-validation-for="ToDate" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                        <div class="card-footer">
                            <input type="submit" class="btn btn-info theme-color" value="Submit" />
                            <button type="reset" class="btn btn-secondary ml-1">Reset</button>
                        </div>
                </form>
            </div>
        </div>
    </div>
    <div>
    </div>

    @section Scripts{
    <script>
        $(document).ready(function () {
            SelectedMenu('menuMaster', 'menuSalary');

            $("#currencyMask").change(function () {
            if (!$.isNumeric($(this).val()))
                $(this).val('0').trigger('change');

            $(this).val(parseFloat($(this).val(), 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
        });

            // Jquery Dependency

            $("input[data-type='currency']").on({
                keyup: function () {
                    formatCurrency($(this));
                },
                blur: function () {
                    formatCurrency($(this), "blur");
                }
            });


            function formatNumber(n) {
                return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
            }


            function formatCurrency(input, blur) {
                var input_val = input.val();

                if (input_val === "") { return; }

                var original_len = input_val.length;

                var caret_pos = input.prop("selectionStart");

                if (input_val.indexOf(".") >= 0) {

                    var decimal_pos = input_val.indexOf(".");

                    var left_side = input_val.substring(0, decimal_pos);
                    var right_side = input_val.substring(decimal_pos);

                    left_side = formatNumber(left_side);

                    right_side = formatNumber(right_side);

                    if (blur === "blur") {
                        right_side += "00";
                    }

                    right_side = right_side.substring(0, 2);

                    input_val = left_side + "." + right_side;

                } else {
                    input_val = formatNumber(input_val);

                    if (blur === "blur") {
                        input_val += ".00";
                    }
                }

                input.val(input_val);

                var updated_len = input_val.length;
                caret_pos = updated_len - original_len + caret_pos;
                input[0].setSelectionRange(caret_pos, caret_pos);
            }
        });
    </script>
}